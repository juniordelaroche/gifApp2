{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","c","alert","type","placeholder","value","onChange","target","id","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","g","title","images","downsized_medium","GifGridItem","alt","src","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","imagenes","role","img","GifExpertApp","categorias","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAuBjD,OACC,sBAAMC,UAAU,MAAMC,SAdD,SAACC,GAEpBA,EAAEC,iBAEEL,EAAWM,OAAOC,OAAS,GAC7BT,GAAc,SAAAU,GAAC,OAAKR,GAAL,mBAAmBQ,OAClCP,EAAc,KAEdQ,MAAM,6CAMV,SACC,sBAAKP,UAAU,4BAAf,UACC,uBACCQ,KAAK,OACAR,UAAU,eACVS,YAAY,wBACjBC,MAAQZ,EACRa,SA1BuB,SAACT,GAEzBH,EAAcG,EAAEU,OAAOF,UA0BvB,wBAAQV,UAAU,0BAA0BQ,KAAK,SAASK,GAAG,gBAA7D,2B,+BCpCSC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAUH,GAD5C,8DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAM,IAAD,EAC1B,MAAO,CACLZ,GAAIY,EAAEZ,GACNa,MAAOD,EAAEC,MACTT,IAAG,UAAEQ,EAAEE,cAAJ,aAAE,EAAUC,iBAAiBX,QARf,kBAWdM,GAXc,4CAAH,sDCEPM,EAAc,SAAC,GAAqB,EAApBhB,GAAqB,IAAjBa,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAEtC,OACE,qBAAKjB,UAAU,WAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAe8B,IAAMJ,EAAQK,IAAMd,IAClD,qBAAKjB,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,SAA6B0B,YCcxBM,EAnBC,SAAC,GAAmB,IAAjBjB,EAAgB,EAAhBA,UAAgB,ECDP,SAACA,GAAe,IAAD,EAEflB,mBAAS,CACjCyB,KAAM,GACNW,SAAS,IAJ8B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAkBzC,OAXAC,qBAAW,WACTtB,EAAQC,GAAWsB,MAAM,SAAAV,GACvBQ,EAAS,CACPb,KAAMK,EACNM,SAAS,SAIZ,CAAClB,IAGGmB,EDf0BI,CAAavB,GAAlCwB,EAFqB,EAE1BjB,KAAeW,EAFW,EAEXA,QAEtB,OACE,qCACIA,GAAW,qBAAKjC,UAAU,8BAA8BwC,KAAK,SAAlD,SAA2D,sBAAMxC,UAAU,kBAAhB,0BACxE,sBAAKA,UAAU,sDAAf,UACE,oBAAIA,UAAU,UAAd,SAA0Be,IAEtBwB,EAASf,KAAK,SAAAiB,GAAG,OACjB,cAAC,EAAD,eAA8BA,GAAZA,EAAI5B,cEYnB6B,EAvBM,WAAO,IAAD,EAEW7C,mBAAS,CAAC,oBAFrB,mBAElB8C,EAFkB,KAEN/C,EAFM,KAI1B,OACC,sBAAKI,UAAU,YAAf,UACC,8CACA,cAAC,EAAD,CAAaJ,cAAgBA,IAC7B,uBACA,qBAAMI,UAAU,wBAAhB,SAEO2C,EAAWnB,KAAI,SAACT,GAAD,OACb,cAAC,EAAD,CAEEA,UAAYA,GADNA,YCZd6B,G,MAAUC,SAASC,cAAc,UAEvCC,IAASC,OAAO,cAAC,EAAD,IAAiBJ,K","file":"static/js/main.2d1140ec.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  \r\n  // Manejador del cambio de valor en el input\r\n  const handleInputChange = (e) => {\r\n    // console.log(e.target.value);\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    // Prevenir el refresh\r\n    e.preventDefault();\r\n\r\n    if( inputValue.trim().length > 2 ) {\r\n      setCategorias(c => [inputValue,...c]);\r\n      setInputValue('');\r\n    } else {\r\n      alert('Ops que pena pero debe ingresar un valor');\r\n    }\r\n\r\n  }\r\n\r\n\treturn (\r\n\t\t<form className=\"row\" onSubmit={ handleSubmit }>\r\n\t\t\t<div className=\"input-group col-md-6 mb-3\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Agregue una categoria\"\r\n\t\t\t\t\tvalue={ inputValue }\r\n\t\t\t\t\tonChange={ handleInputChange }\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"btn btn-outline-primary\" type=\"submit\" id=\"button-addon1\">\r\n\t\t\t\t\tAgregar\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async ( categoria ) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria)}&limit=4&api_key=lUyX8LEVelQdrydht3FjidN5n4otWIok`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map( g => {\r\n    return {\r\n      id: g.id,\r\n      title: g.title,\r\n      url: g.images?.downsized_medium.url\r\n    }\r\n  })\r\n  return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n  \r\n  return (\r\n    <div className=\"col-md-3\">\r\n      <div className='card'>\r\n        <img className=\"card-img-top\" alt={ title } src={ url } />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{ title }</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from '../Components/GifGridItem'\r\n\r\nconst GifGrid = ({ categoria }) => {\r\n\r\n  const {data:imagenes, loading} = useFetchGifs(categoria); //HOOK\r\n\r\n  return (\r\n    <>\r\n      { loading && <div className=\"spinner-border text-primary\" role=\"status\"><span className=\"visually-hidden\">Loading...</span></div> }\r\n      <div className=\"row row-cards animate__animated animate__backInLeft\" >\r\n        <h3 className=\"fw-bold\">{ categoria }</h3>\r\n          {\r\n            imagenes.map( img => \r\n            <GifGridItem key={img.id} {...img} />\r\n            )\r\n          }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect( () => {\r\n    getGifs(categoria).then( images => {\r\n      setState({\r\n        data: images,\r\n        loading: false\r\n      })\r\n    })\r\n\r\n  }, [categoria])\r\n\r\n  \r\n  return state;\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {AddCategory} from \"./Components/AddCategory\";\r\nimport GifGrid from \"./Components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  \r\n  const [categorias, setCategorias] = useState([\"Attack on Titan\"]);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<h1>GifExpertApp</h1>\r\n\t\t\t<AddCategory setCategorias={ setCategorias } />\r\n\t\t\t<hr />\r\n\t\t\t<div  className=\"contenedor-categorias\">\r\n        {\r\n          categorias.map((categoria) => (\r\n            <GifGrid  \r\n              key={ categoria }\r\n              categoria={ categoria }\r\n            />\r\n          ))\r\n        }\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport GifExpertApp from './GifExpertApp';\r\nimport './index.css';\r\n\r\nconst divRoot = document.querySelector('#root');\r\n\r\nReactDOM.render(<GifExpertApp />,divRoot);"],"sourceRoot":""}